/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loggers/wandb.py:396: UserWarning: There is a wandb run already in progress and newly created instances of `WandbLogger` will reuse this run. If this is not desired, call `wandb.finish()` before instantiating `WandbLogger`.
  rank_zero_warn(
GPU available: False, used: False
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
  | Name         | Type      | Params
-------------------------------------------
0 | bert         | BertModel | 89.1 M
1 | hidden_layer | Linear    | 49.2 K
2 | layer        | Linear    | 65
3 | criterion    | BCELoss   | 0
-------------------------------------------
7.1 M     Trainable params
82.0 M    Non-trainable params
89.2 M    Total params
356.650   Total estimated model params size (MB)

Sanity Checking DataLoader 0:   0% 0/1 [00:00<?, ?it/s]
/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/fit_loop.py:280: PossibleUserWarning: The number of training batches (3) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.
  rank_zero_warn(


Epoch 0: 100% 3/3 [01:58<00:00, 39.54s/it, v_num=rh9e, train/loss=0.708]
Validation DataLoader 0:   0% 0/1 [00:00<?, ?it/s]
Error executing job with overrides: []
Traceback (most recent call last):
  File "/content/drive/MyDrive/murata_labo_exp/murata_labo_exp_src/exp3/main.py", line 393, in main
    trainer.fit(model, data_module)
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 529, in fit
    call._call_and_handle_interrupt(
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/call.py", line 42, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 568, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 973, in _run
    results = self._run_stage()
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py", line 1016, in _run_stage
    self.fit_loop.run()
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/fit_loop.py", line 202, in run
    self.on_advance_end()
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/loops/fit_loop.py", line 369, in on_advance_end
    call._call_callback_hooks(trainer, "on_train_epoch_end", monitoring_callbacks=True)
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/call.py", line 193, in _call_callback_hooks
    fn(trainer, trainer.lightning_module, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/callbacks/early_stopping.py", line 180, in on_train_epoch_end
    self._run_early_stopping_check(trainer)
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/callbacks/early_stopping.py", line 191, in _run_early_stopping_check
    if trainer.fast_dev_run or not self._validate_condition_metric(  # disable early_stopping with fast_dev_run
  File "/usr/local/lib/python3.10/dist-packages/pytorch_lightning/callbacks/early_stopping.py", line 146, in _validate_condition_metric
    raise RuntimeError(error_msg)
RuntimeError: Early stopping conditioned on metric `val_loss` which is not available. Pass in or modify your `EarlyStopping` callback to use any of the following: `train/loss`, `train_loss`
        [0.4866],
        [0.4857],
        [0.4923],
        [0.4905],
        [0.4895],
        [0.4478],
        [0.4792],
        [0.5074],
        [0.4761],
        [0.4760],
        [0.4867],
        [0.4976],
        [0.4865],
        [0.4603],
        [0.4949]], grad_fn=<SigmoidBackward0>), tensor([[0.4820],
        [0.4977],
        [0.5097],
        [0.4966],
        [0.4923],
        [0.4980],
        [0.5139],
        [0.5056],
        [0.4922],
        [0.4996],
        [0.5080],
        [0.4506],
        [0.4805],
        [0.5146],
        [0.4723],
        [0.4857]], grad_fn=<SigmoidBackward0>), tensor([[0.4850],
        [0.4975],
        [0.4983],
        [0.5055],
        [0.4912],
        [0.4905]], grad_fn=<SigmoidBackward0>)]
[tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), tensor([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1]), tensor([1, 1, 1, 0, 1, 1])]